

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Sat Jul 12 14:03:13 2025

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F46K20
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1
    24                           	psect	text15,global,reloc=2,class=CODE,delta=1
    25                           	psect	text16,global,reloc=2,class=CODE,delta=1
    26                           	psect	text17,global,reloc=2,class=CODE,delta=1
    27                           	psect	text18,global,reloc=2,class=CODE,delta=1
    28                           	psect	text19,global,reloc=2,class=CODE,delta=1
    29                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    30                           	psect	text20,global,reloc=2,class=CODE,delta=1
    31                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    32                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    33                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    34                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    35   000000                     
    36                           ; Version 2.40
    37                           ; Generated 04/07/2022 GMT
    38                           ; 
    39                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    40                           ; All rights reserved.
    41                           ; 
    42                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    43                           ; 
    44                           ; Redistribution and use in source and binary forms, with or without modification, are
    45                           ; permitted provided that the following conditions are met:
    46                           ; 
    47                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    48                           ;        conditions and the following disclaimer.
    49                           ; 
    50                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    51                           ;        of conditions and the following disclaimer in the documentation and/or other
    52                           ;        materials provided with the distribution. Publication is not required when
    53                           ;        this file is used in an embedded application.
    54                           ; 
    55                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    56                           ;        software without specific prior written permission.
    57                           ; 
    58                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    59                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    60                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    61                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    62                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    63                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    64                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    65                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    66                           ; 
    67                           ; 
    68                           ; Code-generator required, PIC18F46K20 Definitions
    69                           ; 
    70                           ; SFR Addresses
    71   000000                     _ADCON0	set	4034
    72   000000                     _ADRESL	set	4035
    73   000000                     _TRISD	set	3989
    74   000000                     _TRISC	set	3988
    75   000000                     _TRISB	set	3987
    76   000000                     _LATC	set	3979
    77   000000                     _LATB	set	3978
    78                           
    79                           	psect	nvCOMRAM
    80   00000E                     __pnvCOMRAM:
    81                           	callstack 0
    82   00000E                     _ADC_InterruptHandler:
    83                           	callstack 0
    84   00000E                     	ds	2
    85   000010                     _TMR1_InterruptHandler:
    86                           	callstack 0
    87   000010                     	ds	2
    88   000012                     _timer1ReloadVal:
    89                           	callstack 0
    90   000012                     	ds	2
    91   000000                     _TMR1	set	4046
    92   000000                     _LATDbits	set	3980
    93   000000                     _ADCON0bits	set	4034
    94   000000                     _T1CONbits	set	4045
    95   000000                     _WPUB	set	3964
    96   000000                     _ANSEL	set	3966
    97   000000                     _LATA	set	3977
    98   000000                     _LATD	set	3980
    99   000000                     _LATE	set	3981
   100   000000                     _OSCTUNE	set	3995
   101   000000                     _PIE1bits	set	3997
   102   000000                     _RCONbits	set	4048
   103   000000                     _OSCCON	set	4051
   104   000000                     _INTCONbits	set	4082
   105   000000                     _ADCON2	set	4032
   106   000000                     _ADCON1	set	4033
   107   000000                     _T1CON	set	4045
   108   000000                     _TMR1L	set	4046
   109   000000                     _TMR1H	set	4047
   110   000000                     _PIR1bits	set	3998
   111   000000                     _INTCON2bits	set	4081
   112   000000                     _TRISA	set	3986
   113   000000                     _TRISE	set	3990
   114   000000                     _ANSELH	set	3967
   115   000000                     _ADRESH	set	4036
   116                           
   117                           ; #config settings
   118                           
   119                           	psect	cinit
   120   000274                     __pcinit:
   121                           	callstack 0
   122   000274                     start_initialization:
   123                           	callstack 0
   124   000274                     __initialization:
   125                           	callstack 0
   126                           
   127                           ; Clear objects allocated to COMRAM (3 bytes)
   128   000274  6A16               	clrf	(__pbssCOMRAM+2)& (0+255),c
   129   000276  6A15               	clrf	(__pbssCOMRAM+1)& (0+255),c
   130   000278  6A14               	clrf	__pbssCOMRAM& (0+255),c
   131   00027A                     end_of_initialization:
   132                           	callstack 0
   133   00027A                     __end_of__initialization:
   134                           	callstack 0
   135   00027A  9017               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   136   00027C  9217               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   137   00027E  0E00               	movlw	low (__Lmediumconst shr (0+16))
   138   000280  6EF8               	movwf	tblptru,c
   139   000282  0100               	movlb	0
   140   000284  EF3C  F000         	goto	_main	;jump to C main() function
   141                           
   142                           	psect	bssCOMRAM
   143   000014                     __pbssCOMRAM:
   144                           	callstack 0
   145   000014                     _adc_wert:
   146                           	callstack 0
   147   000014                     	ds	2
   148   000016                     _servocounter:
   149                           	callstack 0
   150   000016                     	ds	1
   151                           
   152                           	psect	cstackCOMRAM
   153   000001                     __pcstackCOMRAM:
   154                           	callstack 0
   155   000001                     ??_myServoISR:
   156   000001                     TMR1_WriteTimer@timerVal:
   157                           	callstack 0
   158                           
   159                           ; 2 bytes @ 0x0
   160   000001                     	ds	2
   161   000003                     
   162                           ; 1 bytes @ 0x2
   163   000003                     	ds	1
   164   000004                     myServoISR@i:
   165                           	callstack 0
   166                           
   167                           ; 2 bytes @ 0x3
   168   000004                     	ds	2
   169   000006                     ??_INTERRUPT_InterruptManager:
   170                           
   171                           ; 1 bytes @ 0x5
   172   000006                     	ds	2
   173   000008                     ??_ADC_SelectChannel:
   174   000008                     ?_ADC_GetConversionResult:
   175                           	callstack 0
   176   000008                     TMR1_SetInterruptHandler@InterruptHandler:
   177                           	callstack 0
   178   000008                     ADC_SetInterruptHandler@InterruptHandler:
   179                           	callstack 0
   180                           
   181                           ; 2 bytes @ 0x7
   182   000008                     	ds	1
   183   000009                     ADC_SelectChannel@channel:
   184                           	callstack 0
   185                           
   186                           ; 1 bytes @ 0x8
   187   000009                     	ds	1
   188   00000A                     ??_ADC_GetConversionResult:
   189                           
   190                           ; 1 bytes @ 0x9
   191   00000A                     	ds	2
   192   00000C                     ??_main:
   193                           
   194                           ; 1 bytes @ 0xB
   195   00000C                     	ds	2
   196                           
   197 ;;
   198 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   199 ;;
   200 ;; *************** function _main *****************
   201 ;; Defined at:
   202 ;;		line 54 in file "main.c"
   203 ;; Parameters:    Size  Location     Type
   204 ;;		None
   205 ;; Auto vars:     Size  Location     Type
   206 ;;		None
   207 ;; Return value:  Size  Location     Type
   208 ;;                  1    wreg      void 
   209 ;; Registers used:
   210 ;;		wreg, status,2, status,0, cstack
   211 ;; Tracked objects:
   212 ;;		On entry : 0/0
   213 ;;		On exit  : 0/0
   214 ;;		Unchanged: 0/0
   215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   216 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   217 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   218 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   219 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   220 ;;Total ram usage:        2 bytes
   221 ;; Hardware stack levels required when called: 6
   222 ;; This function calls:
   223 ;;		_ADC_GetConversionResult
   224 ;;		_ADC_Initialize
   225 ;;		_ADC_SelectChannel
   226 ;;		_ADC_StartConversion
   227 ;;		_ADC_TemperatureAcquisitionDelay
   228 ;;		_SYSTEM_Initialize
   229 ;;		_TMR1_SetInterruptHandler
   230 ;; This function is called by:
   231 ;;		Startup code after reset
   232 ;; This function uses a non-reentrant model
   233 ;;
   234                           
   235                           	psect	text0
   236   000078                     __ptext0:
   237                           	callstack 0
   238   000078                     _main:
   239                           	callstack 25
   240   000078                     
   241                           ;main.c: 56:     SYSTEM_Initialize();
   242   000078  EC2F  F001         	call	_SYSTEM_Initialize	;wreg free
   243                           
   244                           ;main.c: 57:     ADC_Initialize();
   245   00007C  EC11  F001         	call	_ADC_Initialize	;wreg free
   246                           
   247                           ;main.c: 58:     TMR1_SetInterruptHandler (myServoISR);
   248   000080  0EE4               	movlw	low _myServoISR
   249   000082  6E08               	movwf	TMR1_SetInterruptHandler@InterruptHandler^0,c
   250   000084  0E00               	movlw	high _myServoISR
   251   000086  6E09               	movwf	(TMR1_SetInterruptHandler@InterruptHandler+1)^0,c
   252   000088  EC54  F001         	call	_TMR1_SetInterruptHandler	;wreg free
   253   00008C                     
   254                           ;main.c: 65:     (INTCONbits.GIE = 1);
   255   00008C  8EF2               	bsf	242,7,c	;volatile
   256   00008E                     
   257                           ;main.c: 71:     (INTCONbits.PEIE = 1);
   258   00008E  8CF2               	bsf	242,6,c	;volatile
   259   000090                     
   260                           ;main.c: 76:     _delay((unsigned long)((1000)*(16000000/4000.0)));
   261   000090  0E15               	movlw	21
   262   000092  6E0D               	movwf	(??_main+1)^0,c
   263   000094  0E4B               	movlw	75
   264   000096  6E0C               	movwf	??_main^0,c
   265   000098  0EBE               	movlw	190
   266   00009A                     u217:
   267   00009A  2EE8               	decfsz	wreg,f,c
   268   00009C  D7FE               	bra	u217
   269   00009E  2E0C               	decfsz	??_main^0,f,c
   270   0000A0  D7FC               	bra	u217
   271   0000A2  2E0D               	decfsz	(??_main+1)^0,f,c
   272   0000A4  D7FA               	bra	u217
   273   0000A6  F000 F000          	nop2	
   274   0000AA  888C               	bsf	140,4,c	;volatile
   275   0000AC                     l1150:
   276                           
   277                           ;main.c: 80:         ADC_SelectChannel(ADC);
   278   0000AC  0E00               	movlw	0
   279   0000AE  EC23  F001         	call	_ADC_SelectChannel
   280   0000B2                     
   281                           ;main.c: 81:         ADC_StartConversion();
   282   0000B2  EC65  F001         	call	_ADC_StartConversion	;wreg free
   283                           
   284                           ;main.c: 82:         ADC_TemperatureAcquisitionDelay();
   285   0000B6  EC4E  F001         	call	_ADC_TemperatureAcquisitionDelay	;wreg free
   286   0000BA                     
   287                           ;main.c: 84:         adc_wert = (uint16_t)(ADC_GetConversionResult() / 8);
   288   0000BA  EC44  F001         	call	_ADC_GetConversionResult	;wreg free
   289   0000BE  90D8               	bcf	status,0,c
   290   0000C0  3209               	rrcf	(?_ADC_GetConversionResult+1)^0,f,c
   291   0000C2  3208               	rrcf	?_ADC_GetConversionResult^0,f,c
   292   0000C4  90D8               	bcf	status,0,c
   293   0000C6  3209               	rrcf	(?_ADC_GetConversionResult+1)^0,f,c
   294   0000C8  3208               	rrcf	?_ADC_GetConversionResult^0,f,c
   295   0000CA  90D8               	bcf	status,0,c
   296   0000CC  3209               	rrcf	(?_ADC_GetConversionResult+1)^0,f,c
   297   0000CE  3208               	rrcf	?_ADC_GetConversionResult^0,f,c
   298   0000D0  C008  F014         	movff	?_ADC_GetConversionResult,_adc_wert
   299   0000D4  C009  F015         	movff	?_ADC_GetConversionResult+1,_adc_wert+1
   300   0000D8                     
   301                           ;main.c: 85:         servocounter = (char)adc_wert;
   302   0000D8  C014  F016         	movff	_adc_wert,_servocounter
   303   0000DC  EF56  F000         	goto	l1150
   304   0000E0  EF3A  F000         	goto	start
   305   0000E4                     __end_of_main:
   306                           	callstack 0
   307                           
   308 ;; *************** function _SYSTEM_Initialize *****************
   309 ;; Defined at:
   310 ;;		line 50 in file "mcc_generated_files/mcc.c"
   311 ;; Parameters:    Size  Location     Type
   312 ;;		None
   313 ;; Auto vars:     Size  Location     Type
   314 ;;		None
   315 ;; Return value:  Size  Location     Type
   316 ;;                  1    wreg      void 
   317 ;; Registers used:
   318 ;;		wreg, status,2, status,0, cstack
   319 ;; Tracked objects:
   320 ;;		On entry : 0/0
   321 ;;		On exit  : 0/0
   322 ;;		Unchanged: 0/0
   323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   324 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   325 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   326 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   327 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   328 ;;Total ram usage:        0 bytes
   329 ;; Hardware stack levels used: 1
   330 ;; Hardware stack levels required when called: 5
   331 ;; This function calls:
   332 ;;		_ADC_Initialize
   333 ;;		_INTERRUPT_Initialize
   334 ;;		_OSCILLATOR_Initialize
   335 ;;		_PIN_MANAGER_Initialize
   336 ;;		_TMR1_Initialize
   337 ;; This function is called by:
   338 ;;		_main
   339 ;; This function uses a non-reentrant model
   340 ;;
   341                           
   342                           	psect	text1
   343   00025E                     __ptext1:
   344                           	callstack 0
   345   00025E                     _SYSTEM_Initialize:
   346                           	callstack 25
   347   00025E                     
   348                           ;mcc_generated_files/mcc.c: 53:     INTERRUPT_Initialize();
   349   00025E  EC63  F001         	call	_INTERRUPT_Initialize	;wreg free
   350   000262                     
   351                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
   352   000262  ECBA  F000         	call	_PIN_MANAGER_Initialize	;wreg free
   353   000266                     
   354                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
   355   000266  EC59  F001         	call	_OSCILLATOR_Initialize	;wreg free
   356   00026A                     
   357                           ;mcc_generated_files/mcc.c: 56:     TMR1_Initialize();
   358   00026A  ECFE  F000         	call	_TMR1_Initialize	;wreg free
   359   00026E                     
   360                           ;mcc_generated_files/mcc.c: 57:     ADC_Initialize();
   361   00026E  EC11  F001         	call	_ADC_Initialize	;wreg free
   362   000272  0012               	return		;funcret
   363   000274                     __end_of_SYSTEM_Initialize:
   364                           	callstack 0
   365                           
   366 ;; *************** function _TMR1_Initialize *****************
   367 ;; Defined at:
   368 ;;		line 64 in file "mcc_generated_files/tmr1.c"
   369 ;; Parameters:    Size  Location     Type
   370 ;;		None
   371 ;; Auto vars:     Size  Location     Type
   372 ;;		None
   373 ;; Return value:  Size  Location     Type
   374 ;;                  1    wreg      void 
   375 ;; Registers used:
   376 ;;		wreg, status,2, status,0, cstack
   377 ;; Tracked objects:
   378 ;;		On entry : 0/0
   379 ;;		On exit  : 0/0
   380 ;;		Unchanged: 0/0
   381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   382 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   383 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   384 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   385 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   386 ;;Total ram usage:        0 bytes
   387 ;; Hardware stack levels used: 1
   388 ;; Hardware stack levels required when called: 4
   389 ;; This function calls:
   390 ;;		_TMR1_SetInterruptHandler
   391 ;; This function is called by:
   392 ;;		_SYSTEM_Initialize
   393 ;; This function uses a non-reentrant model
   394 ;;
   395                           
   396                           	psect	text2
   397   0001FC                     __ptext2:
   398                           	callstack 0
   399   0001FC                     _TMR1_Initialize:
   400                           	callstack 25
   401   0001FC                     
   402                           ;mcc_generated_files/tmr1.c: 69:   TMR1H = 0x73;
   403   0001FC  0E73               	movlw	115
   404   0001FE  6ECF               	movwf	207,c	;volatile
   405                           
   406                           ;mcc_generated_files/tmr1.c: 72:   TMR1L = 0x60;
   407   000200  0E60               	movlw	96
   408   000202  6ECE               	movwf	206,c	;volatile
   409   000204                     
   410                           ;mcc_generated_files/tmr1.c: 75:     timer1ReloadVal=TMR1;
   411   000204  CFCE F012          	movff	4046,_timer1ReloadVal	;volatile
   412   000208  CFCF F013          	movff	4047,_timer1ReloadVal+1	;volatile
   413   00020C                     
   414                           ;mcc_generated_files/tmr1.c: 78:     PIR1bits.TMR1IF = 0;
   415   00020C  909E               	bcf	158,0,c	;volatile
   416   00020E                     
   417                           ;mcc_generated_files/tmr1.c: 81:     PIE1bits.TMR1IE = 1;
   418   00020E  809D               	bsf	157,0,c	;volatile
   419   000210                     
   420                           ;mcc_generated_files/tmr1.c: 84:     TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandl
      +                          er);
   421   000210  0ECE               	movlw	low _TMR1_DefaultInterruptHandler
   422   000212  6E08               	movwf	TMR1_SetInterruptHandler@InterruptHandler^0,c
   423   000214  0E02               	movlw	high _TMR1_DefaultInterruptHandler
   424   000216  6E09               	movwf	(TMR1_SetInterruptHandler@InterruptHandler+1)^0,c
   425   000218  EC54  F001         	call	_TMR1_SetInterruptHandler	;wreg free
   426   00021C                     
   427                           ;mcc_generated_files/tmr1.c: 87:     T1CON = 0x11;
   428   00021C  0E11               	movlw	17
   429   00021E  6ECD               	movwf	205,c	;volatile
   430   000220  0012               	return		;funcret
   431   000222                     __end_of_TMR1_Initialize:
   432                           	callstack 0
   433                           
   434 ;; *************** function _TMR1_SetInterruptHandler *****************
   435 ;; Defined at:
   436 ;;		line 159 in file "mcc_generated_files/tmr1.c"
   437 ;; Parameters:    Size  Location     Type
   438 ;;  InterruptHan    2    7[COMRAM] PTR FTN()void 
   439 ;;		 -> myServoISR(1), TMR1_DefaultInterruptHandler(1), 
   440 ;; Auto vars:     Size  Location     Type
   441 ;;		None
   442 ;; Return value:  Size  Location     Type
   443 ;;                  1    wreg      void 
   444 ;; Registers used:
   445 ;;		wreg, status,2, status,0
   446 ;; Tracked objects:
   447 ;;		On entry : 0/0
   448 ;;		On exit  : 0/0
   449 ;;		Unchanged: 0/0
   450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   451 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   452 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   453 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   454 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   455 ;;Total ram usage:        2 bytes
   456 ;; Hardware stack levels used: 1
   457 ;; Hardware stack levels required when called: 3
   458 ;; This function calls:
   459 ;;		Nothing
   460 ;; This function is called by:
   461 ;;		_TMR1_Initialize
   462 ;;		_main
   463 ;; This function uses a non-reentrant model
   464 ;;
   465                           
   466                           	psect	text3
   467   0002A8                     __ptext3:
   468                           	callstack 0
   469   0002A8                     _TMR1_SetInterruptHandler:
   470                           	callstack 27
   471   0002A8                     
   472                           ;mcc_generated_files/tmr1.c: 160:     TMR1_InterruptHandler = InterruptHandler;
   473   0002A8  C008  F010         	movff	TMR1_SetInterruptHandler@InterruptHandler,_TMR1_InterruptHandler
   474   0002AC  C009  F011         	movff	TMR1_SetInterruptHandler@InterruptHandler+1,_TMR1_InterruptHandler+1
   475   0002B0  0012               	return		;funcret
   476   0002B2                     __end_of_TMR1_SetInterruptHandler:
   477                           	callstack 0
   478                           
   479 ;; *************** function _PIN_MANAGER_Initialize *****************
   480 ;; Defined at:
   481 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
   482 ;; Parameters:    Size  Location     Type
   483 ;;		None
   484 ;; Auto vars:     Size  Location     Type
   485 ;;		None
   486 ;; Return value:  Size  Location     Type
   487 ;;                  1    wreg      void 
   488 ;; Registers used:
   489 ;;		wreg, status,2
   490 ;; Tracked objects:
   491 ;;		On entry : 0/0
   492 ;;		On exit  : 0/0
   493 ;;		Unchanged: 0/0
   494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   495 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   496 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   497 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   498 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   499 ;;Total ram usage:        0 bytes
   500 ;; Hardware stack levels used: 1
   501 ;; Hardware stack levels required when called: 3
   502 ;; This function calls:
   503 ;;		Nothing
   504 ;; This function is called by:
   505 ;;		_SYSTEM_Initialize
   506 ;; This function uses a non-reentrant model
   507 ;;
   508                           
   509                           	psect	text4
   510   000174                     __ptext4:
   511                           	callstack 0
   512   000174                     _PIN_MANAGER_Initialize:
   513                           	callstack 26
   514   000174                     
   515                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
   516   000174  0E00               	movlw	0
   517   000176  6E8D               	movwf	141,c	;volatile
   518                           
   519                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
   520   000178  0E00               	movlw	0
   521   00017A  6E8C               	movwf	140,c	;volatile
   522                           
   523                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
   524   00017C  0E00               	movlw	0
   525   00017E  6E89               	movwf	137,c	;volatile
   526                           
   527                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
   528   000180  0E00               	movlw	0
   529   000182  6E8A               	movwf	138,c	;volatile
   530                           
   531                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
   532   000184  0E00               	movlw	0
   533   000186  6E8B               	movwf	139,c	;volatile
   534                           
   535                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x07;
   536   000188  0E07               	movlw	7
   537   00018A  6E96               	movwf	150,c	;volatile
   538   00018C                     
   539                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0xFF;
   540   00018C  6892               	setf	146,c	;volatile
   541   00018E                     
   542                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xFF;
   543   00018E  6893               	setf	147,c	;volatile
   544   000190                     
   545                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0xFF;
   546   000190  6894               	setf	148,c	;volatile
   547                           
   548                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0xEE;
   549   000192  0EEE               	movlw	238
   550   000194  6E95               	movwf	149,c	;volatile
   551   000196                     
   552                           ;mcc_generated_files/pin_manager.c: 78:     ANSEL = 0xFF;
   553   000196  687E               	setf	126,c	;volatile
   554                           
   555                           ;mcc_generated_files/pin_manager.c: 79:     ANSELH = 0x1F;
   556   000198  0E1F               	movlw	31
   557   00019A  6E7F               	movwf	127,c	;volatile
   558                           
   559                           ;mcc_generated_files/pin_manager.c: 84:     WPUB = 0x00;
   560   00019C  0E00               	movlw	0
   561   00019E  6E7C               	movwf	124,c	;volatile
   562   0001A0                     
   563                           ;mcc_generated_files/pin_manager.c: 85:     INTCON2bits.nRBPU = 1;
   564   0001A0  8EF1               	bsf	241,7,c	;volatile
   565   0001A2  0012               	return		;funcret
   566   0001A4                     __end_of_PIN_MANAGER_Initialize:
   567                           	callstack 0
   568                           
   569 ;; *************** function _OSCILLATOR_Initialize *****************
   570 ;; Defined at:
   571 ;;		line 60 in file "mcc_generated_files/mcc.c"
   572 ;; Parameters:    Size  Location     Type
   573 ;;		None
   574 ;; Auto vars:     Size  Location     Type
   575 ;;		None
   576 ;; Return value:  Size  Location     Type
   577 ;;                  1    wreg      void 
   578 ;; Registers used:
   579 ;;		wreg, status,2
   580 ;; Tracked objects:
   581 ;;		On entry : 0/0
   582 ;;		On exit  : 0/0
   583 ;;		Unchanged: 0/0
   584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   585 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   586 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   587 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   588 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   589 ;;Total ram usage:        0 bytes
   590 ;; Hardware stack levels used: 1
   591 ;; Hardware stack levels required when called: 3
   592 ;; This function calls:
   593 ;;		Nothing
   594 ;; This function is called by:
   595 ;;		_SYSTEM_Initialize
   596 ;; This function uses a non-reentrant model
   597 ;;
   598                           
   599                           	psect	text5
   600   0002B2                     __ptext5:
   601                           	callstack 0
   602   0002B2                     _OSCILLATOR_Initialize:
   603                           	callstack 26
   604   0002B2                     
   605                           ;mcc_generated_files/mcc.c: 63:     OSCCON = 0x72;
   606   0002B2  0E72               	movlw	114
   607   0002B4  6ED3               	movwf	211,c	;volatile
   608                           
   609                           ;mcc_generated_files/mcc.c: 65:     OSCTUNE = 0x40;
   610   0002B6  0E40               	movlw	64
   611   0002B8  6E9B               	movwf	155,c	;volatile
   612   0002BA  0012               	return		;funcret
   613   0002BC                     __end_of_OSCILLATOR_Initialize:
   614                           	callstack 0
   615                           
   616 ;; *************** function _INTERRUPT_Initialize *****************
   617 ;; Defined at:
   618 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
   619 ;; Parameters:    Size  Location     Type
   620 ;;		None
   621 ;; Auto vars:     Size  Location     Type
   622 ;;		None
   623 ;; Return value:  Size  Location     Type
   624 ;;                  1    wreg      void 
   625 ;; Registers used:
   626 ;;		None
   627 ;; Tracked objects:
   628 ;;		On entry : 0/0
   629 ;;		On exit  : 0/0
   630 ;;		Unchanged: 0/0
   631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   632 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   633 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   634 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   635 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   636 ;;Total ram usage:        0 bytes
   637 ;; Hardware stack levels used: 1
   638 ;; Hardware stack levels required when called: 3
   639 ;; This function calls:
   640 ;;		Nothing
   641 ;; This function is called by:
   642 ;;		_SYSTEM_Initialize
   643 ;; This function uses a non-reentrant model
   644 ;;
   645                           
   646                           	psect	text6
   647   0002C6                     __ptext6:
   648                           	callstack 0
   649   0002C6                     _INTERRUPT_Initialize:
   650                           	callstack 26
   651   0002C6                     
   652                           ;mcc_generated_files/interrupt_manager.c: 55:     RCONbits.IPEN = 0;
   653   0002C6  9ED0               	bcf	208,7,c	;volatile
   654   0002C8  0012               	return		;funcret
   655   0002CA                     __end_of_INTERRUPT_Initialize:
   656                           	callstack 0
   657                           
   658 ;; *************** function _ADC_Initialize *****************
   659 ;; Defined at:
   660 ;;		line 62 in file "mcc_generated_files/adc.c"
   661 ;; Parameters:    Size  Location     Type
   662 ;;		None
   663 ;; Auto vars:     Size  Location     Type
   664 ;;		None
   665 ;; Return value:  Size  Location     Type
   666 ;;                  1    wreg      void 
   667 ;; Registers used:
   668 ;;		wreg, status,2, status,0, cstack
   669 ;; Tracked objects:
   670 ;;		On entry : 0/0
   671 ;;		On exit  : 0/0
   672 ;;		Unchanged: 0/0
   673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   674 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   675 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   676 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   677 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   678 ;;Total ram usage:        0 bytes
   679 ;; Hardware stack levels used: 1
   680 ;; Hardware stack levels required when called: 4
   681 ;; This function calls:
   682 ;;		_ADC_SetInterruptHandler
   683 ;; This function is called by:
   684 ;;		_SYSTEM_Initialize
   685 ;;		_main
   686 ;; This function uses a non-reentrant model
   687 ;;
   688                           
   689                           	psect	text7
   690   000222                     __ptext7:
   691                           	callstack 0
   692   000222                     _ADC_Initialize:
   693                           	callstack 25
   694   000222                     
   695                           ;mcc_generated_files/adc.c: 67:     ADCON1 = 0x00;
   696   000222  0E00               	movlw	0
   697   000224  6EC1               	movwf	193,c	;volatile
   698                           
   699                           ;mcc_generated_files/adc.c: 70:     ADCON2 = 0x80;
   700   000226  0E80               	movlw	128
   701   000228  6EC0               	movwf	192,c	;volatile
   702                           
   703                           ;mcc_generated_files/adc.c: 73:     ADRESL = 0x00;
   704   00022A  0E00               	movlw	0
   705   00022C  6EC3               	movwf	195,c	;volatile
   706                           
   707                           ;mcc_generated_files/adc.c: 76:     ADRESH = 0x00;
   708   00022E  0E00               	movlw	0
   709   000230  6EC4               	movwf	196,c	;volatile
   710                           
   711                           ;mcc_generated_files/adc.c: 79:     ADCON0 = 0x01;
   712   000232  0E01               	movlw	1
   713   000234  6EC2               	movwf	194,c	;volatile
   714   000236                     
   715                           ;mcc_generated_files/adc.c: 82:     PIE1bits.ADIE = 1;
   716   000236  8C9D               	bsf	157,6,c	;volatile
   717   000238                     
   718                           ;mcc_generated_files/adc.c: 85:     ADC_SetInterruptHandler(ADC_DefaultInterruptHandler)
      +                          ;
   719   000238  0ED0               	movlw	low _ADC_DefaultInterruptHandler
   720   00023A  6E08               	movwf	ADC_SetInterruptHandler@InterruptHandler^0,c
   721   00023C  0E02               	movlw	high _ADC_DefaultInterruptHandler
   722   00023E  6E09               	movwf	(ADC_SetInterruptHandler@InterruptHandler+1)^0,c
   723   000240  EC5E  F001         	call	_ADC_SetInterruptHandler	;wreg free
   724   000244  0012               	return		;funcret
   725   000246                     __end_of_ADC_Initialize:
   726                           	callstack 0
   727                           
   728 ;; *************** function _ADC_SetInterruptHandler *****************
   729 ;; Defined at:
   730 ;;		line 151 in file "mcc_generated_files/adc.c"
   731 ;; Parameters:    Size  Location     Type
   732 ;;  InterruptHan    2    7[COMRAM] PTR FTN()void 
   733 ;;		 -> ADC_DefaultInterruptHandler(1), 
   734 ;; Auto vars:     Size  Location     Type
   735 ;;		None
   736 ;; Return value:  Size  Location     Type
   737 ;;                  1    wreg      void 
   738 ;; Registers used:
   739 ;;		wreg, status,2, status,0
   740 ;; Tracked objects:
   741 ;;		On entry : 0/0
   742 ;;		On exit  : 0/0
   743 ;;		Unchanged: 0/0
   744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   745 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   746 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   747 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   748 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   749 ;;Total ram usage:        2 bytes
   750 ;; Hardware stack levels used: 1
   751 ;; Hardware stack levels required when called: 3
   752 ;; This function calls:
   753 ;;		Nothing
   754 ;; This function is called by:
   755 ;;		_ADC_Initialize
   756 ;; This function uses a non-reentrant model
   757 ;;
   758                           
   759                           	psect	text8
   760   0002BC                     __ptext8:
   761                           	callstack 0
   762   0002BC                     _ADC_SetInterruptHandler:
   763                           	callstack 25
   764   0002BC                     
   765                           ;mcc_generated_files/adc.c: 152:     ADC_InterruptHandler = InterruptHandler;
   766   0002BC  C008  F00E         	movff	ADC_SetInterruptHandler@InterruptHandler,_ADC_InterruptHandler
   767   0002C0  C009  F00F         	movff	ADC_SetInterruptHandler@InterruptHandler+1,_ADC_InterruptHandler+1
   768   0002C4  0012               	return		;funcret
   769   0002C6                     __end_of_ADC_SetInterruptHandler:
   770                           	callstack 0
   771                           
   772 ;; *************** function _ADC_TemperatureAcquisitionDelay *****************
   773 ;; Defined at:
   774 ;;		line 135 in file "mcc_generated_files/adc.c"
   775 ;; Parameters:    Size  Location     Type
   776 ;;		None
   777 ;; Auto vars:     Size  Location     Type
   778 ;;		None
   779 ;; Return value:  Size  Location     Type
   780 ;;                  1    wreg      void 
   781 ;; Registers used:
   782 ;;		wreg
   783 ;; Tracked objects:
   784 ;;		On entry : 0/0
   785 ;;		On exit  : 0/0
   786 ;;		Unchanged: 0/0
   787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   788 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   789 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   790 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   791 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   792 ;;Total ram usage:        0 bytes
   793 ;; Hardware stack levels used: 1
   794 ;; Hardware stack levels required when called: 3
   795 ;; This function calls:
   796 ;;		Nothing
   797 ;; This function is called by:
   798 ;;		_main
   799 ;; This function uses a non-reentrant model
   800 ;;
   801                           
   802                           	psect	text9
   803   00029C                     __ptext9:
   804                           	callstack 0
   805   00029C                     _ADC_TemperatureAcquisitionDelay:
   806                           	callstack 27
   807   00029C                     
   808                           ;mcc_generated_files/adc.c: 137:     _delay((unsigned long)((200)*(16000000/4000000.0)))
      +                          ;
   809   00029C  0EA0               	movlw	160
   810   00029E                     u227:
   811   00029E  F000 F000          	nop2	
   812   0002A2  2EE8               	decfsz	wreg,f,c
   813   0002A4  D7FC               	bra	u227
   814   0002A6  0012               	return		;funcret
   815   0002A8                     __end_of_ADC_TemperatureAcquisitionDelay:
   816                           	callstack 0
   817                           
   818 ;; *************** function _ADC_StartConversion *****************
   819 ;; Defined at:
   820 ;;		line 96 in file "mcc_generated_files/adc.c"
   821 ;; Parameters:    Size  Location     Type
   822 ;;		None
   823 ;; Auto vars:     Size  Location     Type
   824 ;;		None
   825 ;; Return value:  Size  Location     Type
   826 ;;                  1    wreg      void 
   827 ;; Registers used:
   828 ;;		None
   829 ;; Tracked objects:
   830 ;;		On entry : 0/0
   831 ;;		On exit  : 0/0
   832 ;;		Unchanged: 0/0
   833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   834 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   835 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   836 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   837 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   838 ;;Total ram usage:        0 bytes
   839 ;; Hardware stack levels used: 1
   840 ;; Hardware stack levels required when called: 3
   841 ;; This function calls:
   842 ;;		Nothing
   843 ;; This function is called by:
   844 ;;		_main
   845 ;; This function uses a non-reentrant model
   846 ;;
   847                           
   848                           	psect	text10
   849   0002CA                     __ptext10:
   850                           	callstack 0
   851   0002CA                     _ADC_StartConversion:
   852                           	callstack 27
   853   0002CA                     
   854                           ;mcc_generated_files/adc.c: 99:     ADCON0bits.GO_nDONE = 1;
   855   0002CA  82C2               	bsf	194,1,c	;volatile
   856   0002CC  0012               	return		;funcret
   857   0002CE                     __end_of_ADC_StartConversion:
   858                           	callstack 0
   859                           
   860 ;; *************** function _ADC_SelectChannel *****************
   861 ;; Defined at:
   862 ;;		line 88 in file "mcc_generated_files/adc.c"
   863 ;; Parameters:    Size  Location     Type
   864 ;;  channel         1    wreg     enum E2727
   865 ;; Auto vars:     Size  Location     Type
   866 ;;  channel         1    8[COMRAM] enum E2727
   867 ;; Return value:  Size  Location     Type
   868 ;;                  1    wreg      void 
   869 ;; Registers used:
   870 ;;		wreg, status,2, status,0
   871 ;; Tracked objects:
   872 ;;		On entry : 0/0
   873 ;;		On exit  : 0/0
   874 ;;		Unchanged: 0/0
   875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   876 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   877 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   878 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   879 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   880 ;;Total ram usage:        2 bytes
   881 ;; Hardware stack levels used: 1
   882 ;; Hardware stack levels required when called: 3
   883 ;; This function calls:
   884 ;;		Nothing
   885 ;; This function is called by:
   886 ;;		_main
   887 ;; This function uses a non-reentrant model
   888 ;;
   889                           
   890                           	psect	text11
   891   000246                     __ptext11:
   892                           	callstack 0
   893   000246                     _ADC_SelectChannel:
   894                           	callstack 27
   895                           
   896                           ;incstack = 0
   897                           ;ADC_SelectChannel@channel stored from wreg
   898   000246  6E09               	movwf	ADC_SelectChannel@channel^0,c
   899   000248                     
   900                           ;mcc_generated_files/adc.c: 88: void ADC_SelectChannel(adc_channel_t channel);mcc_genera
      +                          ted_files/adc.c: 89: {;mcc_generated_files/adc.c: 91:     ADCON0bits.CHS = channel;
   901   000248  C009  F008         	movff	ADC_SelectChannel@channel,??_ADC_SelectChannel
   902   00024C  4608               	rlncf	??_ADC_SelectChannel^0,f,c
   903   00024E  4608               	rlncf	??_ADC_SelectChannel^0,f,c
   904   000250  50C2               	movf	194,w,c	;volatile
   905   000252  1808               	xorwf	??_ADC_SelectChannel^0,w,c
   906   000254  0BC3               	andlw	-61
   907   000256  1808               	xorwf	??_ADC_SelectChannel^0,w,c
   908   000258  6EC2               	movwf	194,c	;volatile
   909   00025A                     
   910                           ;mcc_generated_files/adc.c: 93:     ADCON0bits.ADON = 1;
   911   00025A  80C2               	bsf	194,0,c	;volatile
   912   00025C  0012               	return		;funcret
   913   00025E                     __end_of_ADC_SelectChannel:
   914                           	callstack 0
   915                           
   916 ;; *************** function _ADC_GetConversionResult *****************
   917 ;; Defined at:
   918 ;;		line 109 in file "mcc_generated_files/adc.c"
   919 ;; Parameters:    Size  Location     Type
   920 ;;		None
   921 ;; Auto vars:     Size  Location     Type
   922 ;;		None
   923 ;; Return value:  Size  Location     Type
   924 ;;                  2    7[COMRAM] unsigned short 
   925 ;; Registers used:
   926 ;;		wreg, status,2, status,0
   927 ;; Tracked objects:
   928 ;;		On entry : 0/0
   929 ;;		On exit  : 0/0
   930 ;;		Unchanged: 0/0
   931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   932 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   933 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   934 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   935 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   936 ;;Total ram usage:        4 bytes
   937 ;; Hardware stack levels used: 1
   938 ;; Hardware stack levels required when called: 3
   939 ;; This function calls:
   940 ;;		Nothing
   941 ;; This function is called by:
   942 ;;		_main
   943 ;; This function uses a non-reentrant model
   944 ;;
   945                           
   946                           	psect	text12
   947   000288                     __ptext12:
   948                           	callstack 0
   949   000288                     _ADC_GetConversionResult:
   950                           	callstack 27
   951   000288                     
   952                           ;mcc_generated_files/adc.c: 112:      return ((adc_result_t)((ADRESH << 8) + ADRESL));
   953   000288  50C4               	movf	196,w,c	;volatile
   954   00028A  6E0B               	movwf	(??_ADC_GetConversionResult+1)^0,c
   955   00028C  6A0A               	clrf	??_ADC_GetConversionResult^0,c
   956   00028E  50C3               	movf	195,w,c	;volatile
   957   000290  240A               	addwf	??_ADC_GetConversionResult^0,w,c
   958   000292  6E08               	movwf	?_ADC_GetConversionResult^0,c
   959   000294  0E00               	movlw	0
   960   000296  200B               	addwfc	(??_ADC_GetConversionResult+1)^0,w,c
   961   000298  6E09               	movwf	(?_ADC_GetConversionResult+1)^0,c
   962   00029A  0012               	return		;funcret
   963   00029C                     __end_of_ADC_GetConversionResult:
   964                           	callstack 0
   965                           
   966 ;; *************** function _INTERRUPT_InterruptManager *****************
   967 ;; Defined at:
   968 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
   969 ;; Parameters:    Size  Location     Type
   970 ;;		None
   971 ;; Auto vars:     Size  Location     Type
   972 ;;		None
   973 ;; Return value:  Size  Location     Type
   974 ;;                  1    wreg      void 
   975 ;; Registers used:
   976 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
   977 ;; Tracked objects:
   978 ;;		On entry : 0/0
   979 ;;		On exit  : 0/0
   980 ;;		Unchanged: 0/0
   981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   982 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   983 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   984 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   985 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   986 ;;Total ram usage:        2 bytes
   987 ;; Hardware stack levels used: 1
   988 ;; Hardware stack levels required when called: 2
   989 ;; This function calls:
   990 ;;		_ADC_ISR
   991 ;;		_TMR1_ISR
   992 ;; This function is called by:
   993 ;;		Interrupt level 2
   994 ;; This function uses a non-reentrant model
   995 ;;
   996                           
   997                           	psect	intcode
   998   000008                     __pintcode:
   999                           	callstack 0
  1000   000008                     _INTERRUPT_InterruptManager:
  1001                           	callstack 25
  1002                           
  1003                           ;incstack = 0
  1004   000008  8217               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  1005   00000A  CFFA F006          	movff	pclath,??_INTERRUPT_InterruptManager
  1006   00000E  CFFB F007          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  1007   000012                     
  1008                           ;mcc_generated_files/interrupt_manager.c: 61:     if(INTCONbits.PEIE == 1)
  1009   000012  ACF2               	btfss	242,6,c	;volatile
  1010   000014  EF0E  F000         	goto	i2u16_41
  1011   000018  EF10  F000         	goto	i2u16_40
  1012   00001C                     i2u16_41:
  1013   00001C  EF34  F000         	goto	i2l26
  1014   000020                     i2u16_40:
  1015   000020                     
  1016                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         if(PIE1bits.ADIE == 1 && PIR1bits.ADIF == 1)
  1017   000020  AC9D               	btfss	157,6,c	;volatile
  1018   000022  EF15  F000         	goto	i2u17_41
  1019   000026  EF17  F000         	goto	i2u17_40
  1020   00002A                     i2u17_41:
  1021   00002A  EF22  F000         	goto	i2l21
  1022   00002E                     i2u17_40:
  1023   00002E  AC9E               	btfss	158,6,c	;volatile
  1024   000030  EF1C  F000         	goto	i2u18_41
  1025   000034  EF1E  F000         	goto	i2u18_40
  1026   000038                     i2u18_41:
  1027   000038  EF22  F000         	goto	i2l21
  1028   00003C                     i2u18_40:
  1029   00003C                     
  1030                           ;mcc_generated_files/interrupt_manager.c: 64:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 65:             ADC_ISR();
  1031   00003C  ECD2  F000         	call	_ADC_ISR	;wreg free
  1032                           
  1033                           ;mcc_generated_files/interrupt_manager.c: 66:         }
  1034   000040  EF34  F000         	goto	i2l26
  1035   000044                     i2l21:
  1036   000044  A09D               	btfss	157,0,c	;volatile
  1037   000046  EF27  F000         	goto	i2u19_41
  1038   00004A  EF29  F000         	goto	i2u19_40
  1039   00004E                     i2u19_41:
  1040   00004E  EF34  F000         	goto	i2l22
  1041   000052                     i2u19_40:
  1042   000052  A09E               	btfss	158,0,c	;volatile
  1043   000054  EF2E  F000         	goto	i2u20_41
  1044   000058  EF30  F000         	goto	i2u20_40
  1045   00005C                     i2u20_41:
  1046   00005C  EF34  F000         	goto	i2l22
  1047   000060                     i2u20_40:
  1048   000060                     
  1049                           ;mcc_generated_files/interrupt_manager.c: 68:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 69:             TMR1_ISR();
  1050   000060  EC9C  F000         	call	_TMR1_ISR	;wreg free
  1051                           
  1052                           ;mcc_generated_files/interrupt_manager.c: 70:         }
  1053   000064  EF34  F000         	goto	i2l26
  1054   000068                     i2l22:
  1055   000068                     i2l26:
  1056   000068  C007  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  1057   00006C  C006  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  1058   000070  9217               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1059   000072  0011               	retfie		f
  1060   000074                     __end_of_INTERRUPT_InterruptManager:
  1061                           	callstack 0
  1062                           
  1063 ;; *************** function _TMR1_ISR *****************
  1064 ;; Defined at:
  1065 ;;		line 145 in file "mcc_generated_files/tmr1.c"
  1066 ;; Parameters:    Size  Location     Type
  1067 ;;		None
  1068 ;; Auto vars:     Size  Location     Type
  1069 ;;		None
  1070 ;; Return value:  Size  Location     Type
  1071 ;;                  1    wreg      void 
  1072 ;; Registers used:
  1073 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  1074 ;; Tracked objects:
  1075 ;;		On entry : 0/0
  1076 ;;		On exit  : 0/0
  1077 ;;		Unchanged: 0/0
  1078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1079 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1080 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1081 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1082 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1083 ;;Total ram usage:        0 bytes
  1084 ;; Hardware stack levels used: 1
  1085 ;; Hardware stack levels required when called: 1
  1086 ;; This function calls:
  1087 ;;		Absolute function
  1088 ;;		_TMR1_DefaultInterruptHandler
  1089 ;;		_TMR1_WriteTimer
  1090 ;;		_myServoISR
  1091 ;; This function is called by:
  1092 ;;		_INTERRUPT_InterruptManager
  1093 ;; This function uses a non-reentrant model
  1094 ;;
  1095                           
  1096                           	psect	text14
  1097   000138                     __ptext14:
  1098                           	callstack 0
  1099   000138                     _TMR1_ISR:
  1100                           	callstack 25
  1101   000138                     
  1102                           ;mcc_generated_files/tmr1.c: 149:     PIR1bits.TMR1IF = 0;
  1103   000138  909E               	bcf	158,0,c	;volatile
  1104   00013A                     
  1105                           ;mcc_generated_files/tmr1.c: 150:     TMR1_WriteTimer(timer1ReloadVal);
  1106   00013A  C012  F001         	movff	_timer1ReloadVal,TMR1_WriteTimer@timerVal	;volatile
  1107   00013E  C013  F002         	movff	_timer1ReloadVal+1,TMR1_WriteTimer@timerVal+1	;volatile
  1108   000142  ECEA  F000         	call	_TMR1_WriteTimer	;wreg free
  1109   000146                     
  1110                           ;mcc_generated_files/tmr1.c: 152:     if(TMR1_InterruptHandler)
  1111   000146  5010               	movf	_TMR1_InterruptHandler^0,w,c
  1112   000148  1011               	iorwf	(_TMR1_InterruptHandler+1)^0,w,c
  1113   00014A  B4D8               	btfsc	status,2,c
  1114   00014C  EFAA  F000         	goto	i2u14_41
  1115   000150  EFAC  F000         	goto	i2u14_40
  1116   000154                     i2u14_41:
  1117   000154  EFB9  F000         	goto	i2l128
  1118   000158                     i2u14_40:
  1119   000158                     
  1120                           ;mcc_generated_files/tmr1.c: 153:     {;mcc_generated_files/tmr1.c: 154:         TMR1_In
      +                          terruptHandler();
  1121   000158  D802               	call	i2u15_48
  1122   00015A  EFB9  F000         	goto	i2u15_49
  1123   00015E                     i2u15_48:
  1124   00015E  0005               	push	
  1125   000160  6EFA               	movwf	pclath,c
  1126   000162  5010               	movf	_TMR1_InterruptHandler^0,w,c
  1127   000164  6EFD               	movwf	tosl,c
  1128   000166  5011               	movf	(_TMR1_InterruptHandler+1)^0,w,c
  1129   000168  6EFE               	movwf	tosh,c
  1130   00016A  50F8               	movf	tblptru,w,c
  1131   00016C  6EFF               	movwf	tosu,c
  1132   00016E  50FA               	movf	pclath,w,c
  1133   000170  0012               	return		;indir
  1134   000172                     i2u15_49:
  1135   000172                     i2l128:
  1136   000172  0012               	return		;funcret
  1137   000174                     __end_of_TMR1_ISR:
  1138                           	callstack 0
  1139                           
  1140 ;; *************** function _TMR1_DefaultInterruptHandler *****************
  1141 ;; Defined at:
  1142 ;;		line 163 in file "mcc_generated_files/tmr1.c"
  1143 ;; Parameters:    Size  Location     Type
  1144 ;;		None
  1145 ;; Auto vars:     Size  Location     Type
  1146 ;;		None
  1147 ;; Return value:  Size  Location     Type
  1148 ;;                  1    wreg      void 
  1149 ;; Registers used:
  1150 ;;		None
  1151 ;; Tracked objects:
  1152 ;;		On entry : 0/0
  1153 ;;		On exit  : 0/0
  1154 ;;		Unchanged: 0/0
  1155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1156 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1157 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1158 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1159 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1160 ;;Total ram usage:        0 bytes
  1161 ;; Hardware stack levels used: 1
  1162 ;; This function calls:
  1163 ;;		Nothing
  1164 ;; This function is called by:
  1165 ;;		_TMR1_Initialize
  1166 ;;		_TMR1_ISR
  1167 ;; This function uses a non-reentrant model
  1168 ;;
  1169                           
  1170                           	psect	text15
  1171   0002CE                     __ptext15:
  1172                           	callstack 0
  1173   0002CE                     _TMR1_DefaultInterruptHandler:
  1174                           	callstack 25
  1175   0002CE  0012               	return		;funcret
  1176   0002D0                     __end_of_TMR1_DefaultInterruptHandler:
  1177                           	callstack 0
  1178                           
  1179 ;; *************** function _myServoISR *****************
  1180 ;; Defined at:
  1181 ;;		line 89 in file "main.c"
  1182 ;; Parameters:    Size  Location     Type
  1183 ;;		None
  1184 ;; Auto vars:     Size  Location     Type
  1185 ;;  i               2    3[COMRAM] int 
  1186 ;; Return value:  Size  Location     Type
  1187 ;;                  1    wreg      void 
  1188 ;; Registers used:
  1189 ;;		wreg, status,2, status,0
  1190 ;; Tracked objects:
  1191 ;;		On entry : 0/0
  1192 ;;		On exit  : 0/0
  1193 ;;		Unchanged: 0/0
  1194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1195 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1196 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1197 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1198 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1199 ;;Total ram usage:        5 bytes
  1200 ;; Hardware stack levels used: 1
  1201 ;; This function calls:
  1202 ;;		Nothing
  1203 ;; This function is called by:
  1204 ;;		_main
  1205 ;;		_TMR1_ISR
  1206 ;; This function uses a non-reentrant model
  1207 ;;
  1208                           
  1209                           	psect	text16
  1210   0000E4                     __ptext16:
  1211                           	callstack 0
  1212   0000E4                     _myServoISR:
  1213                           	callstack 25
  1214   0000E4  808C               	bsf	140,0,c	;volatile
  1215   0000E6                     
  1216                           ;main.c: 91:     _delay((unsigned long)((1)*(16000000/4000.0)));
  1217   0000E6  0E06               	movlw	6
  1218   0000E8  6E01               	movwf	??_myServoISR^0,c
  1219   0000EA  0E30               	movlw	48
  1220   0000EC                     i2u23_47:
  1221   0000EC  2EE8               	decfsz	wreg,f,c
  1222   0000EE  D7FE               	bra	i2u23_47
  1223   0000F0  2E01               	decfsz	??_myServoISR^0,f,c
  1224   0000F2  D7FC               	bra	i2u23_47
  1225   0000F4  F000 F000          	nop2	
  1226   0000F8                     
  1227                           ;main.c: 92:     for(int i = 0; i < servocounter; i++){
  1228   0000F8  0E00               	movlw	0
  1229   0000FA  6E05               	movwf	(myServoISR@i+1)^0,c
  1230   0000FC  0E00               	movlw	0
  1231   0000FE  6E04               	movwf	myServoISR@i^0,c
  1232   000100  EF88  F000         	goto	i2l233
  1233   000104                     i2l970:
  1234                           
  1235                           ;main.c: 93:         _delay((unsigned long)((7)*(16000000/4000000.0)));
  1236   000104  0E09               	movlw	9
  1237   000106                     i2u24_47:
  1238   000106  2EE8               	decfsz	wreg,f,c
  1239   000108  D7FE               	bra	i2u24_47
  1240   00010A  F000               	nop	
  1241   00010C                     
  1242                           ;main.c: 94:     }
  1243   00010C  4A04               	infsnz	myServoISR@i^0,f,c
  1244   00010E  2A05               	incf	(myServoISR@i+1)^0,f,c
  1245   000110                     i2l233:
  1246   000110  5016               	movf	_servocounter^0,w,c
  1247   000112  6E01               	movwf	??_myServoISR^0,c
  1248   000114  6A02               	clrf	(??_myServoISR+1)^0,c
  1249   000116  5001               	movf	??_myServoISR^0,w,c
  1250   000118  5C04               	subwf	myServoISR@i^0,w,c
  1251   00011A  5005               	movf	(myServoISR@i+1)^0,w,c
  1252   00011C  0A80               	xorlw	128
  1253   00011E  6E03               	movwf	(??_myServoISR+2)^0,c
  1254   000120  5002               	movf	(??_myServoISR+1)^0,w,c
  1255   000122  0A80               	xorlw	128
  1256   000124  5803               	subwfb	(??_myServoISR+2)^0,w,c
  1257   000126  A0D8               	btfss	status,0,c
  1258   000128  EF98  F000         	goto	i2u2_41
  1259   00012C  EF9A  F000         	goto	i2u2_40
  1260   000130                     i2u2_41:
  1261   000130  EF82  F000         	goto	i2l970
  1262   000134                     i2u2_40:
  1263   000134  908C               	bcf	140,0,c	;volatile
  1264   000136  0012               	return		;funcret
  1265   000138                     __end_of_myServoISR:
  1266                           	callstack 0
  1267                           
  1268 ;; *************** function _TMR1_WriteTimer *****************
  1269 ;; Defined at:
  1270 ;;		line 118 in file "mcc_generated_files/tmr1.c"
  1271 ;; Parameters:    Size  Location     Type
  1272 ;;  timerVal        2    0[COMRAM] unsigned short 
  1273 ;; Auto vars:     Size  Location     Type
  1274 ;;		None
  1275 ;; Return value:  Size  Location     Type
  1276 ;;                  1    wreg      void 
  1277 ;; Registers used:
  1278 ;;		wreg, status,2
  1279 ;; Tracked objects:
  1280 ;;		On entry : 0/0
  1281 ;;		On exit  : 0/0
  1282 ;;		Unchanged: 0/0
  1283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1284 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1285 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1286 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1287 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1288 ;;Total ram usage:        2 bytes
  1289 ;; Hardware stack levels used: 1
  1290 ;; This function calls:
  1291 ;;		Nothing
  1292 ;; This function is called by:
  1293 ;;		_TMR1_ISR
  1294 ;;		_TMR1_Reload
  1295 ;; This function uses a non-reentrant model
  1296 ;;
  1297                           
  1298                           	psect	text17
  1299   0001D4                     __ptext17:
  1300                           	callstack 0
  1301   0001D4                     _TMR1_WriteTimer:
  1302                           	callstack 25
  1303   0001D4                     
  1304                           ;mcc_generated_files/tmr1.c: 118: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 119: {;mcc_generated_files/tmr1.c: 120:     if (T1CONbits.nT1SYNC == 1)
  1305   0001D4  A4CD               	btfss	205,2,c	;volatile
  1306   0001D6  EFEF  F000         	goto	i2u13_41
  1307   0001DA  EFF1  F000         	goto	i2u13_40
  1308   0001DE                     i2u13_41:
  1309   0001DE  EFF9  F000         	goto	i2l1100
  1310   0001E2                     i2u13_40:
  1311   0001E2                     
  1312                           ;mcc_generated_files/tmr1.c: 121:     {;mcc_generated_files/tmr1.c: 123:         T1CONbi
      +                          ts.TMR1ON = 0;
  1313   0001E2  90CD               	bcf	205,0,c	;volatile
  1314   0001E4                     
  1315                           ;mcc_generated_files/tmr1.c: 126:         TMR1H = (uint8_t)(timerVal >> 8);
  1316   0001E4  5002               	movf	(TMR1_WriteTimer@timerVal+1)^0,w,c
  1317   0001E6  6ECF               	movwf	207,c	;volatile
  1318   0001E8                     
  1319                           ;mcc_generated_files/tmr1.c: 127:         TMR1L = (uint8_t)timerVal;
  1320   0001E8  C001  FFCE         	movff	TMR1_WriteTimer@timerVal,4046	;volatile
  1321   0001EC                     
  1322                           ;mcc_generated_files/tmr1.c: 130:         T1CONbits.TMR1ON =1;
  1323   0001EC  80CD               	bsf	205,0,c	;volatile
  1324                           
  1325                           ;mcc_generated_files/tmr1.c: 131:     }
  1326   0001EE  EFFD  F000         	goto	i2l121
  1327   0001F2                     i2l1100:
  1328                           
  1329                           ;mcc_generated_files/tmr1.c: 133:     {;mcc_generated_files/tmr1.c: 135:         TMR1H =
      +                           (uint8_t)(timerVal >> 8);
  1330   0001F2  5002               	movf	(TMR1_WriteTimer@timerVal+1)^0,w,c
  1331   0001F4  6ECF               	movwf	207,c	;volatile
  1332   0001F6                     
  1333                           ;mcc_generated_files/tmr1.c: 136:         TMR1L = (uint8_t)timerVal;
  1334   0001F6  C001  FFCE         	movff	TMR1_WriteTimer@timerVal,4046	;volatile
  1335   0001FA                     i2l121:
  1336   0001FA  0012               	return		;funcret
  1337   0001FC                     __end_of_TMR1_WriteTimer:
  1338                           	callstack 0
  1339                           
  1340 ;; *************** function _ADC_ISR *****************
  1341 ;; Defined at:
  1342 ;;		line 140 in file "mcc_generated_files/adc.c"
  1343 ;; Parameters:    Size  Location     Type
  1344 ;;		None
  1345 ;; Auto vars:     Size  Location     Type
  1346 ;;		None
  1347 ;; Return value:  Size  Location     Type
  1348 ;;                  1    wreg      void 
  1349 ;; Registers used:
  1350 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  1351 ;; Tracked objects:
  1352 ;;		On entry : 0/0
  1353 ;;		On exit  : 0/0
  1354 ;;		Unchanged: 0/0
  1355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1356 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1357 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1358 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1359 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1360 ;;Total ram usage:        0 bytes
  1361 ;; Hardware stack levels used: 1
  1362 ;; Hardware stack levels required when called: 1
  1363 ;; This function calls:
  1364 ;;		Absolute function
  1365 ;;		_ADC_DefaultInterruptHandler
  1366 ;; This function is called by:
  1367 ;;		_INTERRUPT_InterruptManager
  1368 ;; This function uses a non-reentrant model
  1369 ;;
  1370                           
  1371                           	psect	text18
  1372   0001A4                     __ptext18:
  1373                           	callstack 0
  1374   0001A4                     _ADC_ISR:
  1375                           	callstack 25
  1376   0001A4                     
  1377                           ;mcc_generated_files/adc.c: 143:     PIR1bits.ADIF = 0;
  1378   0001A4  9C9E               	bcf	158,6,c	;volatile
  1379   0001A6                     
  1380                           ;mcc_generated_files/adc.c: 145:  if(ADC_InterruptHandler)
  1381   0001A6  500E               	movf	_ADC_InterruptHandler^0,w,c
  1382   0001A8  100F               	iorwf	(_ADC_InterruptHandler+1)^0,w,c
  1383   0001AA  B4D8               	btfsc	status,2,c
  1384   0001AC  EFDA  F000         	goto	i2u3_41
  1385   0001B0  EFDC  F000         	goto	i2u3_40
  1386   0001B4                     i2u3_41:
  1387   0001B4  EFE9  F000         	goto	i2l186
  1388   0001B8                     i2u3_40:
  1389   0001B8                     
  1390                           ;mcc_generated_files/adc.c: 146:     {;mcc_generated_files/adc.c: 147:         ADC_Inter
      +                          ruptHandler();
  1391   0001B8  D802               	call	i2u4_48
  1392   0001BA  EFE9  F000         	goto	i2u4_49
  1393   0001BE                     i2u4_48:
  1394   0001BE  0005               	push	
  1395   0001C0  6EFA               	movwf	pclath,c
  1396   0001C2  500E               	movf	_ADC_InterruptHandler^0,w,c
  1397   0001C4  6EFD               	movwf	tosl,c
  1398   0001C6  500F               	movf	(_ADC_InterruptHandler+1)^0,w,c
  1399   0001C8  6EFE               	movwf	tosh,c
  1400   0001CA  50F8               	movf	tblptru,w,c
  1401   0001CC  6EFF               	movwf	tosu,c
  1402   0001CE  50FA               	movf	pclath,w,c
  1403   0001D0  0012               	return		;indir
  1404   0001D2                     i2u4_49:
  1405   0001D2                     i2l186:
  1406   0001D2  0012               	return		;funcret
  1407   0001D4                     __end_of_ADC_ISR:
  1408                           	callstack 0
  1409                           
  1410 ;; *************** function _ADC_DefaultInterruptHandler *****************
  1411 ;; Defined at:
  1412 ;;		line 155 in file "mcc_generated_files/adc.c"
  1413 ;; Parameters:    Size  Location     Type
  1414 ;;		None
  1415 ;; Auto vars:     Size  Location     Type
  1416 ;;		None
  1417 ;; Return value:  Size  Location     Type
  1418 ;;                  1    wreg      void 
  1419 ;; Registers used:
  1420 ;;		None
  1421 ;; Tracked objects:
  1422 ;;		On entry : 0/0
  1423 ;;		On exit  : 0/0
  1424 ;;		Unchanged: 0/0
  1425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1426 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1427 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1428 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1429 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1430 ;;Total ram usage:        0 bytes
  1431 ;; Hardware stack levels used: 1
  1432 ;; This function calls:
  1433 ;;		Nothing
  1434 ;; This function is called by:
  1435 ;;		_ADC_Initialize
  1436 ;;		_ADC_ISR
  1437 ;; This function uses a non-reentrant model
  1438 ;;
  1439                           
  1440                           	psect	text19
  1441   0002D0                     __ptext19:
  1442                           	callstack 0
  1443   0002D0                     _ADC_DefaultInterruptHandler:
  1444                           	callstack 25
  1445   0002D0  0012               	return		;funcret
  1446   0002D2                     __end_of_ADC_DefaultInterruptHandler:
  1447                           	callstack 0
  1448   000000                     
  1449                           	psect	text20
  1450   000000                     __ptext20:
  1451                           	callstack 0
  1452   000000                     
  1453                           	psect	rparam
  1454   000000                     
  1455                           	psect	temp
  1456   000017                     btemp:
  1457                           	callstack 0
  1458   000017                     	ds	1
  1459   000000                     int$flags	set	btemp
  1460   000000                     wtemp8	set	btemp+1
  1461   000000                     ttemp5	set	btemp+1
  1462   000000                     ttemp6	set	btemp+4
  1463   000000                     ttemp7	set	btemp+8
  1464                           
  1465                           	psect	idloc
  1466                           
  1467                           ;Config register IDLOC0 @ 0x200000
  1468                           ;	unspecified, using default values
  1469   200000                     	org	2097152
  1470   200000  FF                 	db	255
  1471                           
  1472                           ;Config register IDLOC1 @ 0x200001
  1473                           ;	unspecified, using default values
  1474   200001                     	org	2097153
  1475   200001  FF                 	db	255
  1476                           
  1477                           ;Config register IDLOC2 @ 0x200002
  1478                           ;	unspecified, using default values
  1479   200002                     	org	2097154
  1480   200002  FF                 	db	255
  1481                           
  1482                           ;Config register IDLOC3 @ 0x200003
  1483                           ;	unspecified, using default values
  1484   200003                     	org	2097155
  1485   200003  FF                 	db	255
  1486                           
  1487                           ;Config register IDLOC4 @ 0x200004
  1488                           ;	unspecified, using default values
  1489   200004                     	org	2097156
  1490   200004  FF                 	db	255
  1491                           
  1492                           ;Config register IDLOC5 @ 0x200005
  1493                           ;	unspecified, using default values
  1494   200005                     	org	2097157
  1495   200005  FF                 	db	255
  1496                           
  1497                           ;Config register IDLOC6 @ 0x200006
  1498                           ;	unspecified, using default values
  1499   200006                     	org	2097158
  1500   200006  FF                 	db	255
  1501                           
  1502                           ;Config register IDLOC7 @ 0x200007
  1503                           ;	unspecified, using default values
  1504   200007                     	org	2097159
  1505   200007  FF                 	db	255
  1506                           
  1507                           	psect	config
  1508                           
  1509                           ; Padding undefined space
  1510   300000                     	org	3145728
  1511   300000  FF                 	db	255
  1512                           
  1513                           ;Config register CONFIG1H @ 0x300001
  1514                           ;	Oscillator Selection bits
  1515                           ;	FOSC = INTIO67, Internal oscillator block, port function on RA6 and RA7
  1516                           ;	Fail-Safe Clock Monitor Enable bit
  1517                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1518                           ;	Internal/External Oscillator Switchover bit
  1519                           ;	IESO = OFF, Oscillator Switchover mode disabled
  1520   300001                     	org	3145729
  1521   300001  08                 	db	8
  1522                           
  1523                           ;Config register CONFIG2L @ 0x300002
  1524                           ;	Power-up Timer Enable bit
  1525                           ;	PWRT = OFF, PWRT disabled
  1526                           ;	Brown-out Reset Enable bits
  1527                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  1528                           ;	Brown Out Reset Voltage bits
  1529                           ;	BORV = 18, VBOR set to 1.8 V nominal
  1530   300002                     	org	3145730
  1531   300002  1F                 	db	31
  1532                           
  1533                           ;Config register CONFIG2H @ 0x300003
  1534                           ;	Watchdog Timer Enable bit
  1535                           ;	WDTEN = OFF, WDT is controlled by SWDTEN bit of the WDTCON register
  1536                           ;	Watchdog Timer Postscale Select bits
  1537                           ;	WDTPS = 32768, 1:32768
  1538   300003                     	org	3145731
  1539   300003  1E                 	db	30
  1540                           
  1541                           ; Padding undefined space
  1542   300004                     	org	3145732
  1543   300004  FF                 	db	255
  1544                           
  1545                           ;Config register CONFIG3H @ 0x300005
  1546                           ;	CCP2 MUX bit
  1547                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  1548                           ;	PORTB A/D Enable bit
  1549                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
  1550                           ;	Low-Power Timer1 Oscillator Enable bit
  1551                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  1552                           ;	HFINTOSC Fast Start-up
  1553                           ;	HFOFST = ON, HFINTOSC starts clocking the CPU without waiting for the oscillator to st
      +                          ablize.
  1554                           ;	MCLR Pin Enable bit
  1555                           ;	MCLRE = OFF, RE3 input pin enabled; MCLR disabled
  1556   300005                     	org	3145733
  1557   300005  0B                 	db	11
  1558                           
  1559                           ;Config register CONFIG4L @ 0x300006
  1560                           ;	Stack Full/Underflow Reset Enable bit
  1561                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1562                           ;	Single-Supply ICSP Enable bit
  1563                           ;	LVP = OFF, Single-Supply ICSP disabled
  1564                           ;	Extended Instruction Set Enable bit
  1565                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  1566                           ;	Background Debugger Enable bit
  1567                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
  1568   300006                     	org	3145734
  1569   300006  81                 	db	129
  1570                           
  1571                           ; Padding undefined space
  1572   300007                     	org	3145735
  1573   300007  FF                 	db	255
  1574                           
  1575                           ;Config register CONFIG5L @ 0x300008
  1576                           ;	Code Protection Block 0
  1577                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  1578                           ;	Code Protection Block 1
  1579                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  1580                           ;	Code Protection Block 2
  1581                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  1582                           ;	Code Protection Block 3
  1583                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  1584   300008                     	org	3145736
  1585   300008  0F                 	db	15
  1586                           
  1587                           ;Config register CONFIG5H @ 0x300009
  1588                           ;	Boot Block Code Protection bit
  1589                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  1590                           ;	Data EEPROM Code Protection bit
  1591                           ;	CPD = OFF, Data EEPROM not code-protected
  1592   300009                     	org	3145737
  1593   300009  C0                 	db	192
  1594                           
  1595                           ;Config register CONFIG6L @ 0x30000A
  1596                           ;	Write Protection Block 0
  1597                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  1598                           ;	Write Protection Block 1
  1599                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  1600                           ;	Write Protection Block 2
  1601                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  1602                           ;	Write Protection Block 3
  1603                           ;	WRT3 = OFF, Block 3 (00C000h-00FFFFh) not write-protected
  1604   30000A                     	org	3145738
  1605   30000A  0F                 	db	15
  1606                           
  1607                           ;Config register CONFIG6H @ 0x30000B
  1608                           ;	Configuration Register Write Protection bit
  1609                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  1610                           ;	Boot Block Write Protection bit
  1611                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  1612                           ;	Data EEPROM Write Protection bit
  1613                           ;	WRTD = OFF, Data EEPROM not write-protected
  1614   30000B                     	org	3145739
  1615   30000B  E0                 	db	224
  1616                           
  1617                           ;Config register CONFIG7L @ 0x30000C
  1618                           ;	Table Read Protection Block 0
  1619                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  1620                           ;	Table Read Protection Block 1
  1621                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  1622                           ;	Table Read Protection Block 2
  1623                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  1624                           ;	Table Read Protection Block 3
  1625                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  1626   30000C                     	org	3145740
  1627   30000C  0F                 	db	15
  1628                           
  1629                           ;Config register CONFIG7H @ 0x30000D
  1630                           ;	Boot Block Table Read Protection bit
  1631                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  1632   30000D                     	org	3145741
  1633   30000D  40                 	db	64
  1634                           tosu	equ	0xFFF
  1635                           tosh	equ	0xFFE
  1636                           tosl	equ	0xFFD
  1637                           stkptr	equ	0xFFC
  1638                           pclatu	equ	0xFFB
  1639                           pclath	equ	0xFFA
  1640                           pcl	equ	0xFF9
  1641                           tblptru	equ	0xFF8
  1642                           tblptrh	equ	0xFF7
  1643                           tblptrl	equ	0xFF6
  1644                           tablat	equ	0xFF5
  1645                           prodh	equ	0xFF4
  1646                           prodl	equ	0xFF3
  1647                           indf0	equ	0xFEF
  1648                           postinc0	equ	0xFEE
  1649                           postdec0	equ	0xFED
  1650                           preinc0	equ	0xFEC
  1651                           plusw0	equ	0xFEB
  1652                           fsr0h	equ	0xFEA
  1653                           fsr0l	equ	0xFE9
  1654                           wreg	equ	0xFE8
  1655                           indf1	equ	0xFE7
  1656                           postinc1	equ	0xFE6
  1657                           postdec1	equ	0xFE5
  1658                           preinc1	equ	0xFE4
  1659                           plusw1	equ	0xFE3
  1660                           fsr1h	equ	0xFE2
  1661                           fsr1l	equ	0xFE1
  1662                           bsr	equ	0xFE0
  1663                           indf2	equ	0xFDF
  1664                           postinc2	equ	0xFDE
  1665                           postdec2	equ	0xFDD
  1666                           preinc2	equ	0xFDC
  1667                           plusw2	equ	0xFDB
  1668                           fsr2h	equ	0xFDA
  1669                           fsr2l	equ	0xFD9
  1670                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         3
    Persistent  6
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     13      22
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    ADC_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ADC_DefaultInterruptHandler(), 

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ADC_DefaultInterruptHandler(), Absolute function(), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> myServoISR(), TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> myServoISR(), Absolute function(), TMR1_DefaultInterruptHandler(), 


Critical Paths under _main in COMRAM

    _main->_ADC_GetConversionResult
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _ADC_Initialize->_ADC_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _TMR1_ISR->_myServoISR

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     559
                                             11 COMRAM     2     2      0
            _ADC_GetConversionResult
                     _ADC_Initialize
                  _ADC_SelectChannel
                _ADC_StartConversion
    _ADC_TemperatureAcquisitionDelay
                  _SYSTEM_Initialize
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     272
                     _ADC_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR1_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0     174
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR1_SetInterruptHandler                             2     0      2     174
                                              7 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0      98
            _ADC_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _ADC_SetInterruptHandler                              2     0      2      98
                                              7 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _ADC_TemperatureAcquisitionDelay                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_StartConversion                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_SelectChannel                                    2     2      0      15
                                              7 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _ADC_GetConversionResult                              4     2      2       0
                                              7 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           2     2      0     255
                                              5 COMRAM     2     2      0
                            _ADC_ISR
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (5) _TMR1_ISR                                             0     0      0     255
                   Absolute function *
       _TMR1_DefaultInterruptHandler *
                    _TMR1_WriteTimer
                         _myServoISR *
 ---------------------------------------------------------------------------------
 (6) _myServoISR                                           5     5      0      15
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (6) _TMR1_WriteTimer                                      2     0      2     240
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (6) _TMR1_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _ADC_ISR                                              0     0      0       0
                   Absolute function *
        _ADC_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (6) _ADC_DefaultInterruptHandler                          0     0      0       0
 ---------------------------------------------------------------------------------
 (6) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_GetConversionResult
   _ADC_Initialize
     _ADC_SetInterruptHandler
   _ADC_SelectChannel
   _ADC_StartConversion
   _ADC_TemperatureAcquisitionDelay
   _SYSTEM_Initialize
     _ADC_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
   _TMR1_SetInterruptHandler

 _INTERRUPT_InterruptManager (ROOT)
   _ADC_ISR
     Absolute function(Fake) *
     _ADC_DefaultInterruptHandler *
   _TMR1_ISR
     Absolute function(Fake) *
     _TMR1_DefaultInterruptHandler *
     _TMR1_WriteTimer *
     _myServoISR *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F5F      0       0      48        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK15           60      0       0      34        0.0%
BANK15              60      0       0      35        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E      D      16       1       23.4%
BITBIGSFRlhl        21      0       0      40        0.0%
BITBIGSFRhlh        1D      0       0      37        0.0%
BITBIGSFRllllll     1C      0       0      46        0.0%
BITBIGSFRhh          D      0       0      36        0.0%
BITBIGSFRlllllh      9      0       0      44        0.0%
BITBIGSFRlhhh        8      0       0      39        0.0%
BITBIGSFRlllhh       4      0       0      42        0.0%
BITBIGSFRlllhll      4      0       0      43        0.0%
BITBIGSFRhll         2      0       0      38        0.0%
BITBIGSFRllllll      1      0       0      45        0.0%
BITBIGSFRllh         1      0       0      41        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      16      47        0.0%
DATA                 0      0      16       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Sat Jul 12 14:03:13 2025

                                      l15 02C8                                        l43 0272  
                                      l46 02BA                                        l79 01A2  
                                     l131 02B0                                       l107 0220  
                                     l161 0244                                       l164 025C  
                                     l173 029A                                       l182 02A6  
                                     l167 02CC                                       l189 02C4  
                                     l920 0174                                       l930 01A0  
                                     l922 018C                                       l932 02B2  
                                     l924 018E                                       l918 02C6  
                                     l926 0190                                       l928 0196  
                                     l998 0248                                       u217 009A  
                                     u227 029E                           _timer1ReloadVal 0012  
                         __end_of_ADC_ISR 01D4           __end_of_ADC_SetInterruptHandler 02C6  
                                     tosl 000FFD                                       wreg 000FE8  
            ?_ADC_DefaultInterruptHandler 0001                                      l1000 025A  
                                    l1002 02CA                                      l1008 029C  
                                    l1120 026E                                      l1112 025E  
                                    l1122 0288                                      l1114 0262  
                                    l1116 0266                                      l1140 0078  
                                    l1070 02BC                                      l1118 026A  
                                    l1150 00AC                                      l1142 008C  
                                    l1080 0210                                      l1072 01FC  
                                    l1152 00B2                                      l1144 008E  
                                    l1082 021C                                      l1074 0204  
                                    l1154 00BA                                      l1146 0090  
                                    l1084 0222                                      l1068 02A8  
                                    l1076 020C                                      l1156 00D8  
                                    l1148 00AA                                      l1086 0236  
                                    l1078 020E                                      l1088 0238  
                                    _LATA 000F89                                      _LATB 000F8A  
                                    _LATC 000F8B                                      _LATD 000F8C  
                                    _LATE 000F8D                                      i2l21 0044  
                                    i2l22 0068                                      i2l26 0068  
                                    _TMR1 000FCE                                      _WPUB 000F7C  
                                    _main 0078                             fp__myServoISR 0000  
                                    btemp 0017                                      start 0074  
 __end_of_ADC_TemperatureAcquisitionDelay 02A8         ??_ADC_TemperatureAcquisitionDelay 0008  
        ?_ADC_TemperatureAcquisitionDelay 0001           _ADC_TemperatureAcquisitionDelay 029C  
              ??_TMR1_SetInterruptHandler 000A                              ___param_bank 000000  
           __end_of_OSCILLATOR_Initialize 02BC                                     ?_main 0001  
                                   _ANSEL 000F7E                                     _T1CON 000FCD  
                                   i2l121 01FA                                     i2l134 02CE  
                                   i2l231 00E4                                     i2l128 0172  
                                   i2l233 0110                                     i2l236 0134  
                                   i2l238 0136                                     i2l192 02D0  
                                   i2l186 01D2                                     i2l970 0104  
                                   i2l972 010C                                     i2l974 01A4  
                                   i2l966 00E6                                     i2l976 01A6  
                                   i2l968 00F8                                     i2l978 01B8  
                                   _TMR1H 000FCF                                     _TMR1L 000FCE  
                                   _TRISA 000F92                                     _TRISB 000F93  
                                   _TRISC 000F94                                     _TRISD 000F95  
                                   _TRISE 000F96                          __end_of_TMR1_ISR 0174  
                 __end_of_TMR1_Initialize 0222                                     pclath 000FFA  
                                   pclatu 000FFB                                     ttemp5 0018  
                                   ttemp6 001B                                     ttemp7 001F  
                                   status 000FD8                                     wtemp8 0018  
                         _TMR1_WriteTimer 01D4                           __initialization 0274  
                            __end_of_main 00E4                                 ??_ADC_ISR 0001  
             ?_INTERRUPT_InterruptManager 0001                                    ??_main 000C  
                           __activetblptr 000002                                    _ADCON0 000FC2  
                                  _ADCON1 000FC1                                    _ADCON2 000FC0  
                                  _ADRESH 000FC4                                    _ADRESL 000FC3  
                                  _ANSELH 000F7F                   TMR1_WriteTimer@timerVal 0001  
                                  i2l1100 01F2                                    i2l1102 01F6  
                                  i2l1110 0158                                    i2l1104 0138  
                                  i2l1106 013A                                    i2l1130 002E  
                                  i2l1108 0146                                    i2l1132 003C  
                                  i2l1134 0052                                    i2l1126 0012  
                                  i2l1136 0060                                    i2l1128 0020  
                                  i2l1090 01D4                                    i2l1092 01E2  
                                  i2l1094 01E4                                    i2l1096 01E8  
                                  i2l1098 01EC                                    _OSCCON 000FD3  
                                  i2u2_40 0134                                    i2u2_41 0130  
                                  i2u3_40 01B8                                    i2u3_41 01B4  
                                  i2u4_48 01BE                                    i2u4_49 01D2  
    __end_of_TMR1_DefaultInterruptHandler 02D0              _TMR1_DefaultInterruptHandler 02CE  
                                  isa$std 000001                                    tblptru 000FF8  
 ADC_SetInterruptHandler@InterruptHandler 0008  TMR1_SetInterruptHandler@InterruptHandler 0008  
                 __end_of_TMR1_WriteTimer 01FC                          ?_TMR1_Initialize 0001  
                       _SYSTEM_Initialize 025E                                __accesstop 0060  
                 __end_of__initialization 027A                        ?_SYSTEM_Initialize 0001  
                           ___rparam_used 000001                            __pcstackCOMRAM 0001  
                     ??_SYSTEM_Initialize 000A                                 ?_TMR1_ISR 0001  
         fp__TMR1_DefaultInterruptHandler 0000             ?_TMR1_DefaultInterruptHandler 0001  
                 _ADC_GetConversionResult 0288                 __end_of_SYSTEM_Initialize 0274  
                              __pnvCOMRAM 000E                               myServoISR@i 0004  
                              ??_TMR1_ISR 0006                                   _ADC_ISR 01A4  
                                 i2u20_40 0060                                   i2u20_41 005C  
                                 i2u13_40 01E2                                   i2u13_41 01DE  
                                 i2u14_40 0158                                   i2u14_41 0154  
                                 i2u23_47 00EC                                   i2u15_48 015E  
                                 i2u16_40 0020                                   i2u15_49 0172  
                                 i2u16_41 001C                                   i2u24_47 0106  
                                 i2u17_40 002E                                   i2u17_41 002A  
                                 i2u18_40 003C                                   i2u18_41 0038  
                                 i2u19_40 0052                                   i2u19_41 004E  
                                 _OSCTUNE 000F9B                          ?_TMR1_WriteTimer 0001  
                    _ADC_InterruptHandler 000E                                   __Hparam 0000  
                 _ADC_SetInterruptHandler 02BC                                   __Lparam 0000  
               ??_ADC_GetConversionResult 000A                                   __pcinit 0274  
                                 __ramtop 1000                                   __ptext0 0078  
                                 __ptext1 025E                                   __ptext2 01FC  
                                 __ptext3 02A8                                   __ptext4 0174  
                                 __ptext5 02B2                                   __ptext6 02C6  
                                 __ptext7 0222                                   __ptext8 02BC  
                                 __ptext9 029C            ??_TMR1_DefaultInterruptHandler 0001  
                               _T1CONbits 000FCD                     _OSCILLATOR_Initialize 02B2  
                ??_PIN_MANAGER_Initialize 0008                 ?_TMR1_SetInterruptHandler 0008  
                              _myServoISR 00E4                      end_of_initialization 027A  
                           __Lmediumconst 0000       __end_of_ADC_DefaultInterruptHandler 02D2  
             _ADC_DefaultInterruptHandler 02D0                       _ADC_StartConversion 02CA  
           ??_ADC_DefaultInterruptHandler 0001                 ??_ADC_SetInterruptHandler 000A  
                    ?_ADC_StartConversion 0001              __end_of_INTERRUPT_Initialize 02CA  
                          _ADC_Initialize 0222                    ?_OSCILLATOR_Initialize 0001  
                     start_initialization 0274                               ?_myServoISR 0001  
                   ??_ADC_StartConversion 0008                    __end_of_ADC_Initialize 0246  
                                ?_ADC_ISR 0001                               __pbssCOMRAM 0014  
                  _PIN_MANAGER_Initialize 0174                                 __pintcode 0008  
                       _ADC_SelectChannel 0246          __end_of_TMR1_SetInterruptHandler 02B2  
                         ?_ADC_Initialize 0001                        ?_ADC_SelectChannel 0001  
            ??_INTERRUPT_InterruptManager 0006                       ??_ADC_SelectChannel 0008  
                    _INTERRUPT_Initialize 02C6                                  _LATDbits 000F8C  
                                _PIE1bits 000F9D                 __end_of_ADC_SelectChannel 025E  
                                _PIR1bits 000F9E                                  _RCONbits 000FD0  
          fp__ADC_DefaultInterruptHandler 0000                                  _TMR1_ISR 0138  
                       ??_TMR1_Initialize 000A                                _ADCON0bits 000FC2  
                ADC_SelectChannel@channel 0009                               _INTCON2bits 000FF1  
                   ?_INTERRUPT_Initialize 0001                                  __Hrparam 0000  
                                __Lrparam 0000                  ?_ADC_GetConversionResult 0008  
                 ??_OSCILLATOR_Initialize 0008                  _TMR1_SetInterruptHandler 02A8  
                                _adc_wert 0014                     _TMR1_InterruptHandler 0010  
                                __ptext10 02CA                                  __ptext11 0246  
                                __ptext20 0000                                  __ptext12 0288  
                                __ptext14 0138                                  __ptext15 02CE  
                                __ptext16 00E4                                  __ptext17 01D4  
                                __ptext18 01A4                                  __ptext19 02D0  
                            ??_myServoISR 0001                                  isa$xinst 000000  
                                int$flags 0017        __end_of_INTERRUPT_InterruptManager 0074  
              _INTERRUPT_InterruptManager 0008                         ??_TMR1_WriteTimer 0003  
                      __end_of_myServoISR 0138                                _INTCONbits 000FF2  
                  ??_INTERRUPT_Initialize 0008                  ?_ADC_SetInterruptHandler 0008  
                                intlevel2 0000               __end_of_ADC_StartConversion 02CE  
                 ?_PIN_MANAGER_Initialize 0001           __end_of_ADC_GetConversionResult 029C  
                        ??_ADC_Initialize 000A                              _servocounter 0016  
          __end_of_PIN_MANAGER_Initialize 01A4                           _TMR1_Initialize 01FC  
